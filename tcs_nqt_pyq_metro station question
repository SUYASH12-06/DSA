// Problem Statement:
// You are given an array arr[] consisting of n elements, where each element is either 0, 1, or 2. Your task is to sort the array in linear time without using any extra space (i.e., the sorting should be done in-place).

// Example:
// Input:
// arr = {2, 0, 1, 2, 1, 0}

// Output:
// {0, 0, 1, 1, 2, 2}

#include<bits/stdc++.h>
using namespace std;
int main(){
int m;
cin>>m;
vector<int> arr(m);
for(int i=0;i<m;i++){
    cin>>arr[i];
}

int zeros=0,ones=0,twos=0,threes=0;
for(int i:arr){
    if(i==0)
    zeros++;
    else if(i==1)
    ones++;
    else if(i==2)
    twos++;
    else
    threes++;
}
int i=0,n=arr.size();
while(i<n){
    while(zeros>0){
        arr[i]=0;
        zeros--;
        i++;
    }
    while(ones>0){
        arr[i]=1;
        ones--;
        i++;
    }
    while(twos>0){
        arr[i]=2;
        twos--;
        i++;
    }
    while(threes>0){
        arr[i]=3;
        threes--;
        i++;
    }
}

for(int i=0;i<arr.size();i++){
    cout<<arr[i]<<" ";
}
}
